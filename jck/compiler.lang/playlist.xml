<?xml version='1.0' encoding='UTF-8'?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/playlist.xsd">
	<include>../jck.mk</include>
	<test>
		<testCaseName>jck-compiler-lang-BINC</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/BINC,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-CLSS</testCaseName>
		<disabled>
			<comment>Disabled on aix due to RTC: 144784</comment>
			<plat>ppc64_aix(_mixed)?</plat>
			<version>11</version>
		</disabled>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/CLSS,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-CONV</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/CONV,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-EXPR</testCaseName>
		<disabled>
			<comment>Disabled on win and ppc64le due to backlog/issues/487. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
			<plat>ppc64le_linux(_mixed)?|x86-64_windows(_mixed)?</plat>
			<version>11</version>
		</disabled>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/EXPR,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-INTF</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/INTF,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-LMBD</testCaseName>
		<disabled>
			<comment>Disabled on win due to backlog/issues/487. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
			<plat>x86-64_windows(_mixed)?</plat>
			<version>11</version>
		</disabled>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/LMBD,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-ARR</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/ARR,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-DASG</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/DASG,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-EXCP</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/EXCP,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-EXEC</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/EXEC,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-FP</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/FP,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-ICLS</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/ICLS,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-INFR</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/INFR,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-MOD</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/MOD,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-NAME</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE)-test-args=$(Q)tests=lang/NAME,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-PKGS</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/PKGS,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-THRD</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/THRD,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-TYPE</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/TYPE,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-ANNOT</testCaseName>
		<disabled>
			<comment>Disabled on win due to backlog/issues/487. Awaiting some automation improvements, in the interim these targets will be run manually</comment>
			<plat>x86-64_windows(_mixed)?</plat>
			<version>11</version>
		</disabled>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/ANNOT,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-LEX</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/LEX,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-compiler-lang-STMT</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=lang/STMT,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=COMPILER$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
</playlist>
