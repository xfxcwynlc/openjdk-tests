<?xml version='1.0' encoding='UTF-8'?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/playlist.xsd">
	<include>../jck.mk</include>
	<test>
		<testCaseName>jck-runtime-vm-constantpool</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/constantpool,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-jdwp</testCaseName>
		<disabled>
			<comment>backlog/issues/477</comment>
		</disabled>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/jdwp,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-jvmti</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/jvmti,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-overview</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/overview,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-classfmt</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/classfmt,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-module</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/module,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier-abstractAndNative</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/verifier/abstractAndNative,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier-instructions-group1</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=$(VERIFIER_INSTRUCTIONS_TESTS_GROUP1),jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier-instructions-group2</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=$(VERIFIER_INSTRUCTIONS_TESTS_GROUP2),jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier-instructions-group3</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=$(VERIFIER_INSTRUCTIONS_TESTS_GROUP3),jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier-instructions-group4</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=$(VERIFIER_INSTRUCTIONS_TESTS_GROUP4),jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier-protectedCheck</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/verifier/protectedCheck,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-verifier-subclassFinal</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/verifier/subclassFinal,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
		<versions>
			<version>9+</version>
		</versions>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-instr</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/instr,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>sanity</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-cldc</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/cldc,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-concepts</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/concepts,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-fp</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/fp,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-jni</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/jni,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
	<test>
		<testCaseName>jck-runtime-vm-typechecker</testCaseName>
		<variations>
			<variation>NoOptions</variation>
		</variations>
		<command>$(JCK_CMD_TEMPLATE) -test-args=$(Q)tests=vm/typechecker,jckRoot=$(JCK_ROOT),jckversion=$(JCK_VERSION),testsuite=RUNTIME$(Q); \
	$(TEST_STATUS)</command>
		<levels>
			<level>extended</level>
		</levels>
		<groups>
			<group>jck</group>
		</groups>
	</test>
</playlist>
